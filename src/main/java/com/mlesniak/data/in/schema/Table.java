/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.mlesniak.data.in.schema;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Table extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Table\",\"namespace\":\"com.mlesniak.data.in.schema\",\"fields\":[{\"name\":\"column0\",\"type\":[\"string\",\"null\"]},{\"name\":\"column1\",\"type\":[\"string\",\"null\"]},{\"name\":\"column2\",\"type\":[\"string\",\"null\"]},{\"name\":\"column3\",\"type\":[\"string\",\"null\"]},{\"name\":\"column4\",\"type\":[\"string\",\"null\"]},{\"name\":\"column5\",\"type\":[\"string\",\"null\"]},{\"name\":\"column6\",\"type\":[\"string\",\"null\"]},{\"name\":\"column7\",\"type\":[\"string\",\"null\"]},{\"name\":\"column8\",\"type\":[\"string\",\"null\"]},{\"name\":\"column9\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence column0;
  @Deprecated public java.lang.CharSequence column1;
  @Deprecated public java.lang.CharSequence column2;
  @Deprecated public java.lang.CharSequence column3;
  @Deprecated public java.lang.CharSequence column4;
  @Deprecated public java.lang.CharSequence column5;
  @Deprecated public java.lang.CharSequence column6;
  @Deprecated public java.lang.CharSequence column7;
  @Deprecated public java.lang.CharSequence column8;
  @Deprecated public java.lang.CharSequence column9;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Table() {}

  /**
   * All-args constructor.
   */
  public Table(java.lang.CharSequence column0, java.lang.CharSequence column1, java.lang.CharSequence column2, java.lang.CharSequence column3, java.lang.CharSequence column4, java.lang.CharSequence column5, java.lang.CharSequence column6, java.lang.CharSequence column7, java.lang.CharSequence column8, java.lang.CharSequence column9) {
    this.column0 = column0;
    this.column1 = column1;
    this.column2 = column2;
    this.column3 = column3;
    this.column4 = column4;
    this.column5 = column5;
    this.column6 = column6;
    this.column7 = column7;
    this.column8 = column8;
    this.column9 = column9;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return column0;
    case 1: return column1;
    case 2: return column2;
    case 3: return column3;
    case 4: return column4;
    case 5: return column5;
    case 6: return column6;
    case 7: return column7;
    case 8: return column8;
    case 9: return column9;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: column0 = (java.lang.CharSequence)value$; break;
    case 1: column1 = (java.lang.CharSequence)value$; break;
    case 2: column2 = (java.lang.CharSequence)value$; break;
    case 3: column3 = (java.lang.CharSequence)value$; break;
    case 4: column4 = (java.lang.CharSequence)value$; break;
    case 5: column5 = (java.lang.CharSequence)value$; break;
    case 6: column6 = (java.lang.CharSequence)value$; break;
    case 7: column7 = (java.lang.CharSequence)value$; break;
    case 8: column8 = (java.lang.CharSequence)value$; break;
    case 9: column9 = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'column0' field.
   */
  public java.lang.CharSequence getColumn0() {
    return column0;
  }

  /**
   * Sets the value of the 'column0' field.
   * @param value the value to set.
   */
  public void setColumn0(java.lang.CharSequence value) {
    this.column0 = value;
  }

  /**
   * Gets the value of the 'column1' field.
   */
  public java.lang.CharSequence getColumn1() {
    return column1;
  }

  /**
   * Sets the value of the 'column1' field.
   * @param value the value to set.
   */
  public void setColumn1(java.lang.CharSequence value) {
    this.column1 = value;
  }

  /**
   * Gets the value of the 'column2' field.
   */
  public java.lang.CharSequence getColumn2() {
    return column2;
  }

  /**
   * Sets the value of the 'column2' field.
   * @param value the value to set.
   */
  public void setColumn2(java.lang.CharSequence value) {
    this.column2 = value;
  }

  /**
   * Gets the value of the 'column3' field.
   */
  public java.lang.CharSequence getColumn3() {
    return column3;
  }

  /**
   * Sets the value of the 'column3' field.
   * @param value the value to set.
   */
  public void setColumn3(java.lang.CharSequence value) {
    this.column3 = value;
  }

  /**
   * Gets the value of the 'column4' field.
   */
  public java.lang.CharSequence getColumn4() {
    return column4;
  }

  /**
   * Sets the value of the 'column4' field.
   * @param value the value to set.
   */
  public void setColumn4(java.lang.CharSequence value) {
    this.column4 = value;
  }

  /**
   * Gets the value of the 'column5' field.
   */
  public java.lang.CharSequence getColumn5() {
    return column5;
  }

  /**
   * Sets the value of the 'column5' field.
   * @param value the value to set.
   */
  public void setColumn5(java.lang.CharSequence value) {
    this.column5 = value;
  }

  /**
   * Gets the value of the 'column6' field.
   */
  public java.lang.CharSequence getColumn6() {
    return column6;
  }

  /**
   * Sets the value of the 'column6' field.
   * @param value the value to set.
   */
  public void setColumn6(java.lang.CharSequence value) {
    this.column6 = value;
  }

  /**
   * Gets the value of the 'column7' field.
   */
  public java.lang.CharSequence getColumn7() {
    return column7;
  }

  /**
   * Sets the value of the 'column7' field.
   * @param value the value to set.
   */
  public void setColumn7(java.lang.CharSequence value) {
    this.column7 = value;
  }

  /**
   * Gets the value of the 'column8' field.
   */
  public java.lang.CharSequence getColumn8() {
    return column8;
  }

  /**
   * Sets the value of the 'column8' field.
   * @param value the value to set.
   */
  public void setColumn8(java.lang.CharSequence value) {
    this.column8 = value;
  }

  /**
   * Gets the value of the 'column9' field.
   */
  public java.lang.CharSequence getColumn9() {
    return column9;
  }

  /**
   * Sets the value of the 'column9' field.
   * @param value the value to set.
   */
  public void setColumn9(java.lang.CharSequence value) {
    this.column9 = value;
  }

  /** Creates a new Table RecordBuilder */
  public static com.mlesniak.data.in.schema.Table.Builder newBuilder() {
    return new com.mlesniak.data.in.schema.Table.Builder();
  }
  
  /** Creates a new Table RecordBuilder by copying an existing Builder */
  public static com.mlesniak.data.in.schema.Table.Builder newBuilder(com.mlesniak.data.in.schema.Table.Builder other) {
    return new com.mlesniak.data.in.schema.Table.Builder(other);
  }
  
  /** Creates a new Table RecordBuilder by copying an existing Table instance */
  public static com.mlesniak.data.in.schema.Table.Builder newBuilder(com.mlesniak.data.in.schema.Table other) {
    return new com.mlesniak.data.in.schema.Table.Builder(other);
  }
  
  /**
   * RecordBuilder for Table instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Table>
    implements org.apache.avro.data.RecordBuilder<Table> {

    private java.lang.CharSequence column0;
    private java.lang.CharSequence column1;
    private java.lang.CharSequence column2;
    private java.lang.CharSequence column3;
    private java.lang.CharSequence column4;
    private java.lang.CharSequence column5;
    private java.lang.CharSequence column6;
    private java.lang.CharSequence column7;
    private java.lang.CharSequence column8;
    private java.lang.CharSequence column9;

    /** Creates a new Builder */
    private Builder() {
      super(com.mlesniak.data.in.schema.Table.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.mlesniak.data.in.schema.Table.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.column0)) {
        this.column0 = data().deepCopy(fields()[0].schema(), other.column0);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.column1)) {
        this.column1 = data().deepCopy(fields()[1].schema(), other.column1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.column2)) {
        this.column2 = data().deepCopy(fields()[2].schema(), other.column2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.column3)) {
        this.column3 = data().deepCopy(fields()[3].schema(), other.column3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.column4)) {
        this.column4 = data().deepCopy(fields()[4].schema(), other.column4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.column5)) {
        this.column5 = data().deepCopy(fields()[5].schema(), other.column5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.column6)) {
        this.column6 = data().deepCopy(fields()[6].schema(), other.column6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.column7)) {
        this.column7 = data().deepCopy(fields()[7].schema(), other.column7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.column8)) {
        this.column8 = data().deepCopy(fields()[8].schema(), other.column8);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.column9)) {
        this.column9 = data().deepCopy(fields()[9].schema(), other.column9);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Table instance */
    private Builder(com.mlesniak.data.in.schema.Table other) {
            super(com.mlesniak.data.in.schema.Table.SCHEMA$);
      if (isValidValue(fields()[0], other.column0)) {
        this.column0 = data().deepCopy(fields()[0].schema(), other.column0);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.column1)) {
        this.column1 = data().deepCopy(fields()[1].schema(), other.column1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.column2)) {
        this.column2 = data().deepCopy(fields()[2].schema(), other.column2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.column3)) {
        this.column3 = data().deepCopy(fields()[3].schema(), other.column3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.column4)) {
        this.column4 = data().deepCopy(fields()[4].schema(), other.column4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.column5)) {
        this.column5 = data().deepCopy(fields()[5].schema(), other.column5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.column6)) {
        this.column6 = data().deepCopy(fields()[6].schema(), other.column6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.column7)) {
        this.column7 = data().deepCopy(fields()[7].schema(), other.column7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.column8)) {
        this.column8 = data().deepCopy(fields()[8].schema(), other.column8);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.column9)) {
        this.column9 = data().deepCopy(fields()[9].schema(), other.column9);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'column0' field */
    public java.lang.CharSequence getColumn0() {
      return column0;
    }
    
    /** Sets the value of the 'column0' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn0(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.column0 = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'column0' field has been set */
    public boolean hasColumn0() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'column0' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn0() {
      column0 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'column1' field */
    public java.lang.CharSequence getColumn1() {
      return column1;
    }
    
    /** Sets the value of the 'column1' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn1(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.column1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'column1' field has been set */
    public boolean hasColumn1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'column1' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn1() {
      column1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'column2' field */
    public java.lang.CharSequence getColumn2() {
      return column2;
    }
    
    /** Sets the value of the 'column2' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn2(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.column2 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'column2' field has been set */
    public boolean hasColumn2() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'column2' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn2() {
      column2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'column3' field */
    public java.lang.CharSequence getColumn3() {
      return column3;
    }
    
    /** Sets the value of the 'column3' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn3(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.column3 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'column3' field has been set */
    public boolean hasColumn3() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'column3' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn3() {
      column3 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'column4' field */
    public java.lang.CharSequence getColumn4() {
      return column4;
    }
    
    /** Sets the value of the 'column4' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn4(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.column4 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'column4' field has been set */
    public boolean hasColumn4() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'column4' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn4() {
      column4 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'column5' field */
    public java.lang.CharSequence getColumn5() {
      return column5;
    }
    
    /** Sets the value of the 'column5' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn5(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.column5 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'column5' field has been set */
    public boolean hasColumn5() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'column5' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn5() {
      column5 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'column6' field */
    public java.lang.CharSequence getColumn6() {
      return column6;
    }
    
    /** Sets the value of the 'column6' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn6(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.column6 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'column6' field has been set */
    public boolean hasColumn6() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'column6' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn6() {
      column6 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'column7' field */
    public java.lang.CharSequence getColumn7() {
      return column7;
    }
    
    /** Sets the value of the 'column7' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn7(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.column7 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'column7' field has been set */
    public boolean hasColumn7() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'column7' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn7() {
      column7 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'column8' field */
    public java.lang.CharSequence getColumn8() {
      return column8;
    }
    
    /** Sets the value of the 'column8' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn8(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.column8 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'column8' field has been set */
    public boolean hasColumn8() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'column8' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn8() {
      column8 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'column9' field */
    public java.lang.CharSequence getColumn9() {
      return column9;
    }
    
    /** Sets the value of the 'column9' field */
    public com.mlesniak.data.in.schema.Table.Builder setColumn9(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.column9 = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'column9' field has been set */
    public boolean hasColumn9() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'column9' field */
    public com.mlesniak.data.in.schema.Table.Builder clearColumn9() {
      column9 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public Table build() {
      try {
        Table record = new Table();
        record.column0 = fieldSetFlags()[0] ? this.column0 : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.column1 = fieldSetFlags()[1] ? this.column1 : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.column2 = fieldSetFlags()[2] ? this.column2 : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.column3 = fieldSetFlags()[3] ? this.column3 : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.column4 = fieldSetFlags()[4] ? this.column4 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.column5 = fieldSetFlags()[5] ? this.column5 : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.column6 = fieldSetFlags()[6] ? this.column6 : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.column7 = fieldSetFlags()[7] ? this.column7 : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.column8 = fieldSetFlags()[8] ? this.column8 : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.column9 = fieldSetFlags()[9] ? this.column9 : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
